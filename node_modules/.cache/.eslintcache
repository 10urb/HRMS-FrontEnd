[{"F:\\reacthrms\\hrms-project\\src\\index.js":"1","F:\\reacthrms\\hrms-project\\src\\App.js":"2","F:\\reacthrms\\hrms-project\\src\\reportWebVitals.js":"3","F:\\reacthrms\\hrms-project\\src\\layouts\\Dashboard.jsx":"4","F:\\reacthrms\\hrms-project\\src\\layouts\\Navigation.jsx":"5","F:\\reacthrms\\hrms-project\\src\\pages\\JobAdvertisementList.jsx":"6","F:\\reacthrms\\hrms-project\\src\\services\\jobAdvertisementService.js":"7","F:\\reacthrms\\hrms-project\\src\\pages\\JobAdvertisementOrderDateDesc.jsx":"8","F:\\reacthrms\\hrms-project\\src\\layouts\\SignUp.jsx":"9","F:\\reacthrms\\hrms-project\\src\\layouts\\SignedOut.jsx":"10","F:\\reacthrms\\hrms-project\\src\\layouts\\SignedIn.jsx":"11","F:\\reacthrms\\hrms-project\\src\\layouts\\SerchBoxComponent.jsx":"12","F:\\reacthrms\\hrms-project\\src\\services\\workingTimeService.js":"13","F:\\reacthrms\\hrms-project\\src\\services\\cityService.js":"14","F:\\reacthrms\\hrms-project\\src\\services\\workplaceService.js":"15","F:\\reacthrms\\hrms-project\\src\\Utilities\\CustomFormControls\\HRMSTextInput.jsx":"16","F:\\reacthrms\\hrms-project\\src\\layouts\\SidebarMenu.jsx":"17","F:\\reacthrms\\hrms-project\\src\\pages\\EmployerList.jsx":"18","F:\\reacthrms\\hrms-project\\src\\services\\employerService.js":"19","F:\\reacthrms\\hrms-project\\src\\forms\\JobAdvertisementForm.jsx":"20","F:\\reacthrms\\hrms-project\\src\\forms\\ResumeForm.jsx":"21","F:\\reacthrms\\hrms-project\\src\\forms\\EmployerForm.jsx":"22","F:\\reacthrms\\hrms-project\\src\\forms\\JobSeekerForm.jsx":"23","F:\\reacthrms\\hrms-project\\src\\services\\jobSeekerService.js":"24","F:\\reacthrms\\hrms-project\\src\\services\\resumeService.js":"25","F:\\reacthrms\\hrms-project\\src\\Utilities\\CustomFormControls\\HRMSTextSelectInput.jsx":"26","F:\\reacthrms\\hrms-project\\src\\services\\jobTitleService.js":"27","F:\\reacthrms\\hrms-project\\src\\forms\\EducationInformationForm.jsx":"28","F:\\reacthrms\\hrms-project\\src\\services\\educationInformationService.js":"29","F:\\reacthrms\\hrms-project\\src\\pages\\ConfirmToUsers.jsx":"30","F:\\reacthrms\\hrms-project\\src\\pages\\ConfirmToAdvertisements.jsx":"31","F:\\reacthrms\\hrms-project\\src\\forms\\WorkplaceForm.jsx":"32","F:\\reacthrms\\hrms-project\\src\\forms\\WorkingTimeForm.jsx":"33","F:\\reacthrms\\hrms-project\\src\\forms\\KnownTechnologyForm.jsx":"34","F:\\reacthrms\\hrms-project\\src\\services\\knownTechnologyService.js":"35","F:\\reacthrms\\hrms-project\\src\\forms\\KnownLanguageForm.jsx":"36","F:\\reacthrms\\hrms-project\\src\\services\\knownLanguageService.js":"37"},{"size":533,"mtime":1624561895716,"results":"38","hashOfConfig":"39"},{"size":391,"mtime":1624633935274,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":2886,"mtime":1625177977267,"results":"42","hashOfConfig":"39"},{"size":1095,"mtime":1625138869349,"results":"43","hashOfConfig":"39"},{"size":1985,"mtime":1625058443245,"results":"44","hashOfConfig":"39"},{"size":1013,"mtime":1625067598003,"results":"45","hashOfConfig":"39"},{"size":2021,"mtime":1624561314136,"results":"46","hashOfConfig":"39"},{"size":473,"mtime":1624567051118,"results":"47","hashOfConfig":"39"},{"size":456,"mtime":1625137402281,"results":"48","hashOfConfig":"39"},{"size":715,"mtime":1624567854229,"results":"49","hashOfConfig":"39"},{"size":485,"mtime":1624530753897,"results":"50","hashOfConfig":"39"},{"size":429,"mtime":1623861940900,"results":"51","hashOfConfig":"39"},{"size":271,"mtime":1623796238897,"results":"52","hashOfConfig":"39"},{"size":413,"mtime":1623862150841,"results":"53","hashOfConfig":"39"},{"size":516,"mtime":1625053915693,"results":"54","hashOfConfig":"39"},{"size":2004,"mtime":1625152692838,"results":"55","hashOfConfig":"39"},{"size":1908,"mtime":1625058443245,"results":"56","hashOfConfig":"39"},{"size":270,"mtime":1624571440115,"results":"57","hashOfConfig":"39"},{"size":7084,"mtime":1625156681430,"results":"58","hashOfConfig":"39"},{"size":2423,"mtime":1625138638171,"results":"59","hashOfConfig":"39"},{"size":3704,"mtime":1625138747027,"results":"60","hashOfConfig":"39"},{"size":3476,"mtime":1625171156794,"results":"61","hashOfConfig":"39"},{"size":526,"mtime":1623859853119,"results":"62","hashOfConfig":"39"},{"size":396,"mtime":1623860613585,"results":"63","hashOfConfig":"39"},{"size":867,"mtime":1625130154111,"results":"64","hashOfConfig":"39"},{"size":260,"mtime":1623859967951,"results":"65","hashOfConfig":"39"},{"size":3591,"mtime":1625137492402,"results":"66","hashOfConfig":"39"},{"size":444,"mtime":1624572244788,"results":"67","hashOfConfig":"39"},{"size":564,"mtime":1625153499368,"results":"68","hashOfConfig":"39"},{"size":538,"mtime":1625153491896,"results":"69","hashOfConfig":"39"},{"size":2361,"mtime":1625172564334,"results":"70","hashOfConfig":"39"},{"size":2034,"mtime":1625172583530,"results":"71","hashOfConfig":"39"},{"size":2639,"mtime":1625176520343,"results":"72","hashOfConfig":"39"},{"size":285,"mtime":1623860429350,"results":"73","hashOfConfig":"39"},{"size":3005,"mtime":1625176981362,"results":"74","hashOfConfig":"39"},{"size":277,"mtime":1623860361320,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1v8w9hh",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\reacthrms\\hrms-project\\src\\index.js",[],["164","165"],"F:\\reacthrms\\hrms-project\\src\\App.js",[],"F:\\reacthrms\\hrms-project\\src\\reportWebVitals.js",[],"F:\\reacthrms\\hrms-project\\src\\layouts\\Dashboard.jsx",[],"F:\\reacthrms\\hrms-project\\src\\layouts\\Navigation.jsx",[],"F:\\reacthrms\\hrms-project\\src\\pages\\JobAdvertisementList.jsx",[],"F:\\reacthrms\\hrms-project\\src\\services\\jobAdvertisementService.js",[],"F:\\reacthrms\\hrms-project\\src\\pages\\JobAdvertisementOrderDateDesc.jsx",[],"F:\\reacthrms\\hrms-project\\src\\layouts\\SignUp.jsx",["166","167","168"],"F:\\reacthrms\\hrms-project\\src\\layouts\\SignedOut.jsx",[],"F:\\reacthrms\\hrms-project\\src\\layouts\\SignedIn.jsx",[],"F:\\reacthrms\\hrms-project\\src\\layouts\\SerchBoxComponent.jsx",[],["169","170"],"F:\\reacthrms\\hrms-project\\src\\services\\workingTimeService.js",[],"F:\\reacthrms\\hrms-project\\src\\services\\cityService.js",[],"F:\\reacthrms\\hrms-project\\src\\services\\workplaceService.js",[],"F:\\reacthrms\\hrms-project\\src\\Utilities\\CustomFormControls\\HRMSTextInput.jsx",[],"F:\\reacthrms\\hrms-project\\src\\layouts\\SidebarMenu.jsx",["171","172","173"],"import React, { useState } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {  Icon,  Menu, Container, Sidebar } from 'semantic-ui-react'\r\nimport JobAdvertisementForm from '../forms/JobAdvertisementForm'\r\n\r\n\r\nexport default function SidebarMenu() {\r\n    const [state, setState] = useState()\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Sidebar\r\n                direction=\"left\"\r\n                as={Menu}\r\n                animation='uncover'\r\n                icon='labeled'\r\n                width=\"thin\"\r\n                vertical\r\n                visible\r\n            >\r\n                <Container className=\"main\">\r\n                    <Menu.Item  as={NavLink} to=\"/jobadvertisements/form\">\r\n                        <Icon   name='add' />\r\n                        \r\n                        İş ilanı ver\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a'>\r\n                        <Icon name='search' />\r\n                        İş ara\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a'>\r\n                        <Icon name='eye' />\r\n                        İş arayanlar\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a'>\r\n                        <Icon name='child' />\r\n                        İş verenler\r\n                    </Menu.Item>\r\n                    <Menu.Item as='a'>\r\n                        <Icon name='users' />\r\n                        Kullanıcılar\r\n                    </Menu.Item>\r\n                    <Menu.Item  as={NavLink} to=\"/confirmto/advertisements\">\r\n                        <Icon name='address card' />\r\n                        Onay bekleyen ilanlar\r\n                    </Menu.Item>\r\n                    <Menu.Item  as={NavLink} to=\"/confirmto/users\">\r\n                        <Icon name='street view' />\r\n                        Onay bekleyen kullanıcılar\r\n                    </Menu.Item>\r\n                </Container>\r\n            </Sidebar>\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\pages\\EmployerList.jsx",[],"F:\\reacthrms\\hrms-project\\src\\services\\employerService.js",[],"F:\\reacthrms\\hrms-project\\src\\forms\\JobAdvertisementForm.jsx",["174","175","176","177","178"],"import React, { useEffect, useState } from 'react'\r\nimport WorkingTimeService from '../services/workingTimeService'\r\nimport CityService from '../services/cityService'\r\nimport JobAdvertisementService from '../services/jobAdvertisementService'\r\nimport WorkplaceService from '../services/workplaceService'\r\nimport JobTitleService from '../services/jobTitleService'\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput'\r\nimport HRMSTextSelectInput from '../Utilities/CustomFormControls/HRMSTextSelectInput'\r\nimport { Button, Form, Grid, GridColumn, Header, Divider, Segment } from 'semantic-ui-react'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const Zorunlu_Alan = \"Zorunlu alan\"\r\nexport const Tarih_Girmelisiniz = \"Tarih girmelisiniz\"\r\nexport const Posta_Adresi_Gecerli_Degil = \"Posta adresi geçerli değil\"\r\nexport const Gecerli_Bir_Sayi_Degil = \"Geçerli bir sayı değil\"\r\nexport const Ekleme_Basarili = \"Ekleme başarılı \"\r\n\r\n\r\nexport default function JobAdvertisementForm() {\r\n    const [workingTime, setWorkingTime] = useState([])\r\n    const [workplace, setWorkplace] = useState([])\r\n    const [city, setCity] = useState([])\r\n    const [jobAdvertisement, setjobAdvertisement] = useState([])\r\n    const [jobTitle, setJobTitle] = useState([])\r\n\r\n    useEffect(() => {\r\n        let workingTimeService = new WorkingTimeService()\r\n        workingTimeService.getGetAll().then(result => setWorkingTime(result.data.data))\r\n\r\n        let workplaceService = new WorkplaceService()\r\n        workplaceService.getGetAll().then(result => setWorkplace(result.data.data))\r\n\r\n        let cityService = new CityService()\r\n        cityService.getAllCity().then(result => setCity(result.data.data))\r\n\r\n        let jobTitleService = new JobTitleService()\r\n        jobTitleService.getGetAll().then(result => setJobTitle(result.data.data))\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    const workingTimeOption = workingTime.map((workingTime) => ({\r\n        key: workingTime.workingTimeId,\r\n        text: workingTime.workingTime,\r\n        value: workingTime.workingTime,\r\n    }));\r\n\r\n    const cityOption = city.map((city) => ({\r\n        key: city.id,\r\n        text: city.cityName,\r\n        value: city.cityName\r\n    }));\r\n\r\n    const workplaceOption = workplace.map((workplace) => ({\r\n        key: workplace.id,\r\n        text: workplace.typeOfWorkplace,\r\n        value: workplace.typeOfWorkplace,\r\n    }))\r\n\r\n    const initialValues = {\r\n        companyName: \"\",\r\n        companyMail: \"\",\r\n        city: \"\",\r\n        workingTime: \"\",\r\n        workplace: \"\",\r\n        webSite: \"\",\r\n        jobDescription: \"\",\r\n        minSalary: \"\",\r\n        maxSalary: \"\",\r\n        numberOfOpenPosition: \"\",\r\n        publicationDate: \"\",\r\n        applicationDeadline: \"\",\r\n        jobTitle: \"\"\r\n    }\r\n    const validationSchema = Yup.object({\r\n        companyName: Yup.string().required(Zorunlu_Alan),\r\n        companyMail: Yup.string().email(Posta_Adresi_Gecerli_Degil).required(Zorunlu_Alan),\r\n        city: Yup.string().required(Zorunlu_Alan),\r\n        workingTime: Yup.string().required(Zorunlu_Alan),\r\n        workplace: Yup.string().required(Zorunlu_Alan),\r\n        webSite: Yup.string().required(Zorunlu_Alan),\r\n        jobDescription: Yup.string().required(Zorunlu_Alan),\r\n        minSalary: Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan),\r\n        maxSalary: Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan),\r\n        numberOfOpenPosition: Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan),\r\n        publicationDate: Yup.date(Tarih_Girmelisiniz).required(Zorunlu_Alan),\r\n        applicationDeadline: Yup.date(Tarih_Girmelisiniz).required(Zorunlu_Alan),\r\n        jobTitle: Yup.string().required(Zorunlu_Alan)\r\n    })\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => {\r\n                    // let jobAdvertisementService = new JobAdvertisementService()\r\n                    // jobAdvertisementService.postAdd(values).then(toast.success(Ekleme_Basarili))\r\n                    console.log(values)\r\n                }}\r\n            >\r\n                {({ handleSubmit, handleChange }) => (\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            İş ilanı ekleme\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <Grid.Row>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"companyName\" placeholder=\" Şirket adı\"></HRMSTextInput>\r\n                                        <HRMSTextSelectInput options={cityOption} placeholder=\"Şehir seçiniz\" name=\"city\" ></HRMSTextSelectInput>\r\n                                        <HRMSTextInput name=\"companyMail\" placeholder=\" Şirket e-posta adresi\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"webSite\" placeholder=\" Web sitesi adı\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"jobTitle\" placeholder=\" Pozisyon adı\"></HRMSTextInput>\r\n                                        <HRMSTextSelectInput options={workingTimeOption} placeholder=\"Çalışma zamanı seçiniz\" name=\"workingTime\" ></HRMSTextSelectInput>\r\n                                        <HRMSTextInput name=\"numberOfOpenPosition\" placeholder=\"Açık pozisyon sayısı\"></HRMSTextInput>\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextSelectInput options={workplaceOption} placeholder=\"Çalışma yeri seçiniz\" name=\"workplace\" ></HRMSTextSelectInput>\r\n                                        <HRMSTextInput name=\"jobDescription\" placeholder=\" İş açıklaması\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"minSalary\" placeholder=\" En düşük ücret\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"maxSalary\" placeholder=\" En yüksek ücret\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"publicationDate\" placeholder=\" Yayın tarihi\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"applicationDeadline\" placeholder=\" İlan bitiş tarihi\"></HRMSTextInput>\r\n\r\n                                    </GridColumn>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                            <Divider ></Divider>\r\n                            <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n\r\n                        </Segment>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n\r\n        </div >\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\forms\\ResumeForm.jsx",["179","180"],"import { Formik } from 'formik'\r\nimport React from 'react'\r\nimport { Button, Form, Grid, GridColumn, Header, Divider, Segment, FormButton, GridRow } from 'semantic-ui-react'\r\nimport * as Yup from 'yup';\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput';\r\nimport ResumeService from '../services/resumeService'\r\n\r\nexport default function ResumeForm() {\r\n    let resumeService = new ResumeService()\r\n\r\n    const initialValues = {\r\n        gitHubLink: \"\",\r\n        linkedinLink: \"\",\r\n        coverLetter: \"\"\r\n    }\r\n    const validationSchema = Yup.object({\r\n        gitHubLink: Yup.string(),\r\n        linkedinLink: Yup.string(),\r\n        coverLetter: Yup.string(),\r\n    })\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => {\r\n                    console.log(values)\r\n\r\n                }}\r\n            >\r\n                {({ handleSubmit }) => (\r\n\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            .... Ekleme\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <GridRow>\r\n                                    <GridColumn width={4}>\r\n\r\n\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"gitHubLink\" placeholder=\"GitHub linkinizi yazınız\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"linkedinLink\" placeholder=\"Linkedin linkinizi yazınız\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"coverLetter\" placeholder=\"Kapak yazınızı giriniz\"></HRMSTextInput>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <Divider ></Divider>\r\n                            <Button type=\"submit\" color=\"olive\" circular> Ekle </Button>\r\n\r\n                        </Segment>\r\n                    </Form>\r\n                )}\r\n            </Formik >\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n        </div>\r\n    )\r\n}","F:\\reacthrms\\hrms-project\\src\\forms\\EmployerForm.jsx",["181"],"import { Formik } from 'formik'\r\nimport React from 'react'\r\nimport { Button, Divider, Form, Grid, GridColumn, Header, Segment } from 'semantic-ui-react'\r\nimport * as Yup from \"yup\"\r\nimport EmployerService from '../services/employerService'\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput'\r\nimport { Posta_Adresi_Gecerli_Degil, Zorunlu_Alan } from './JobAdvertisementForm'\r\nimport { Sifreler_Eslesmiyor } from './JobSeekerForm'\r\n\r\nexport default function EmployerFormPost() {\r\n    let employerService = new EmployerService()\r\n\r\n    const initialValues = {\r\n        companyName: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        webSiteName: \"\",\r\n        phoneNumber: \"\",\r\n        companyMail: \"\",\r\n        password: \"\",\r\n        passwordAgain: \"\"\r\n    }\r\n    const validationSchema = Yup.object({\r\n        companyName: Yup.string().required(Zorunlu_Alan),\r\n        firstName: Yup.string().required(Zorunlu_Alan),\r\n        lastName: Yup.string().required(Zorunlu_Alan),\r\n        webSiteName: Yup.string().required(Zorunlu_Alan),\r\n        phoneNumber: Yup.number().required(Zorunlu_Alan),\r\n        companyMail: Yup.string().email(Posta_Adresi_Gecerli_Degil).required(Zorunlu_Alan),\r\n        password: Yup.string().required(),\r\n        passwordAgain: Yup.string().oneOf([Yup.ref('password')], Sifreler_Eslesmiyor)\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => {\r\n                    console.log(values)\r\n\r\n                }}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            İş veren kayıt\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <Grid.Row>\r\n                                    <GridColumn width={4}>\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"companyName\" placeholder=\"Şirket adı giriniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"firstName\" placeholder=\"Adınızı giriniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"lastyName\" placeholder=\"Soyadınızı giriniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"webSiteName\" placeholder=\"Web adresini giriniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"phoneNumber\" placeholder=\"Telefon numarası giriniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"companyMail\" placeholder=\"Şirket uzantılı mail adresinizi giriniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"password\" placeholder=\"Şifrenizi oluşturun\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"passwordAgain\" placeholder=\"Şifrenin tekrarı\"></HRMSTextInput>\r\n                                    </GridColumn>\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                            <Divider />\r\n                            <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n                        </Segment>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\forms\\JobSeekerForm.jsx",["182"],"import {  Formik } from 'formik'\r\nimport React from 'react'\r\nimport { Button, Grid, GridColumn, Header, Segment,Form } from 'semantic-ui-react'\r\nimport * as Yup from \"yup\"\r\nimport JobSeekerService from '../services/jobSeekerService'\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput'\r\nimport { Gecerli_Bir_Sayi_Degil, Posta_Adresi_Gecerli_Degil, Zorunlu_Alan } from './JobAdvertisementForm'\r\nexport const Sifreler_Eslesmiyor=\"Şifreler eşleşmiyor\"\r\n\r\nexport default function JobSeekerForm() {\r\n    let jobSeekerService = new JobSeekerService()\r\n\r\n\r\n    const initialValues = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        nationalityId: \"\",\r\n        birthYear: \"\",\r\n        eMail: \"\",\r\n        password: \"\",\r\n        passwordAgain: \"\"\r\n\r\n    }\r\n    const validationSchema = Yup.object({\r\n        firstName: Yup.string().required(Zorunlu_Alan),\r\n        lastName: Yup.string().required(Zorunlu_Alan),\r\n        nationalityId: Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan).positive(),\r\n        birthYear: Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan).min(1950).positive(),\r\n        eMail: Yup.string().email(Posta_Adresi_Gecerli_Degil).required(Zorunlu_Alan),\r\n        password: Yup.string().required(Zorunlu_Alan),\r\n        passwordAgain: Yup.string().required(Zorunlu_Alan).oneOf([Yup.ref('password')],Sifreler_Eslesmiyor)\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => {\r\n                   console.log(values)\r\n                }}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            İş arayan kayıt\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <Grid.Row>\r\n                                    <GridColumn width={4}>\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"firstName\" placeholder=\"Adınız\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"lastName\" placeholder=\"Soyadınız\"></HRMSTextInput>\r\n                                        <HRMSTextInput type=\"email\" name=\"eMail\" placeholder=\"E posta adresiniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"birthYear\" placeholder=\"Doğum yılınız\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"nationalityId\" placeholder=\"TC kimlik numaranız\"></HRMSTextInput>\r\n                                        <HRMSTextInput type=\"password\" name=\"password\" placeholder=\"Şifrenizi oluşturun\"></HRMSTextInput>\r\n                                        <HRMSTextInput type=\"password\" name=\"passwordAgain\" placeholder=\"Şifrenin tekrarı\"></HRMSTextInput>\r\n                                        <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n\r\n                                    </GridColumn>\r\n\r\n                                </Grid.Row>\r\n                            </Grid>\r\n                        </Segment>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\services\\jobSeekerService.js",[],"F:\\reacthrms\\hrms-project\\src\\services\\resumeService.js",[],"F:\\reacthrms\\hrms-project\\src\\Utilities\\CustomFormControls\\HRMSTextSelectInput.jsx",[],"F:\\reacthrms\\hrms-project\\src\\services\\jobTitleService.js",[],"F:\\reacthrms\\hrms-project\\src\\forms\\EducationInformationForm.jsx",["183","184","185"],"import { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport * as Yup from \"yup\"\r\nimport { Zorunlu_Alan } from './JobAdvertisementForm'\r\nimport EducationInformationService from '../services/educationInformationService'\r\nimport { Button, Divider, Form, Grid, GridRow, GridColumn, Header, Segment } from 'semantic-ui-react'\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput'\r\nimport HRMSTextSelectInput from '../Utilities/CustomFormControls/HRMSTextSelectInput'\r\nexport const Secim_Yapmalisiniz = \"Seçim yapmalısınız\"\r\nexport default function EducationInformationForm() {\r\n\r\n    let educationInformationService = new EducationInformationService()\r\n    const [educationInformation, setEducationInformation] = useState([])\r\n\r\n    const educationStatusOption = [\r\n        {\r\n            key: true,\r\n            text: \"Devam ediyor\",\r\n            value: true\r\n        },\r\n        {\r\n            key: false,\r\n            text: \"Mezun\",\r\n            value: false,\r\n        }\r\n    ]\r\n    const initialValues = {\r\n        schoolName: \"\",\r\n        startDateOfSchool: \"\",\r\n        schoolDepartment: \"\",\r\n        graduationDate: \"\",\r\n        educationStatus: \"\"\r\n    }\r\n    const validationSchema = Yup.object({\r\n        schoolName: Yup.string().required(Zorunlu_Alan),\r\n        startDateOfSchool: Yup.date().required(Zorunlu_Alan),\r\n        schoolDepartment: Yup.string().required(Zorunlu_Alan),\r\n        graduationDate: Yup.date(),\r\n        educationStatus: Yup.bool().required(Secim_Yapmalisiniz)\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => {\r\n                    console.log(values)\r\n                }}\r\n            >\r\n                {({ handleSubmit, handleChange }) => (\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            Akademik bilgi ekleme\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <GridRow>\r\n                                    <GridColumn width={4}>\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"schoolName\" placeholder=\"Okul adı\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"startDateOfSchool\" placeholder=\"Bu okula başladığınız yıl\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"schoolDepartment\" placeholder=\"Okuduğunuz bölüm\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"graduationDate\" placeholder=\"Meznuniyet tarihi\"></HRMSTextInput>\r\n                                        <HRMSTextSelectInput options={educationStatusOption} placeholder=\"Halen devam ediyor mu?\" name=\"educationStatus\" ></HRMSTextSelectInput>\r\n                                        <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <Divider ></Divider>\r\n                        </Segment>\r\n                    </Form >\r\n                )}\r\n            </Formik>\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n        </div >\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\services\\educationInformationService.js",[],"F:\\reacthrms\\hrms-project\\src\\pages\\ConfirmToUsers.jsx",["186"],"import React from 'react'\r\nimport { Button, Grid, GridColumn, GridRow, Menu } from 'semantic-ui-react'\r\n\r\nexport default function ConfirmToUsers() {\r\n    return (\r\n        <div>\r\n            <Menu tabular >\r\n              \r\n              \r\n            </Menu>\r\n          \r\n\r\n            <Grid>\r\n                <GridRow>\r\n                    <GridColumn width={4}>\r\n\r\n                    </GridColumn>\r\n                    <GridColumn width={12}>\r\n\r\n                    </GridColumn>\r\n                </GridRow>\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\pages\\ConfirmToAdvertisements.jsx",["187"],"import React from 'react'\r\nimport { Button, Grid, GridColumn, GridRow, Menu } from 'semantic-ui-react'\r\n\r\nexport default function ConfirmToAdvertisements() {\r\n    return (\r\n        <div>\r\n            <Menu tabular>\r\n            \r\n            </Menu>\r\n\r\n            <Grid>\r\n                <GridRow>\r\n                    <GridColumn width={4}>\r\n\r\n                    </GridColumn>\r\n                    <GridColumn width={12}>\r\n\r\n                    </GridColumn>\r\n                </GridRow>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\forms\\WorkplaceForm.jsx",["188"],"import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport WorkplaceService from '../services/workplaceService'\r\nimport * as Yup from \"yup\"\r\nimport { Formik } from 'formik'\r\nimport { Button, Form, Grid, GridColumn, Header, Divider, Segment, GridRow } from 'semantic-ui-react'\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput'\r\nimport { Zorunlu_Alan } from './JobAdvertisementForm'\r\n\r\n\r\nexport default function WorkplaceForm() {\r\n\r\n    const [workplace, setWorkplace] = useState([])\r\n    useEffect(() => {\r\n        let workplaceService = new WorkplaceService()\r\n        workplaceService.getGetAll().then(result => setWorkplace(result.data.data))\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        typeOfWorkplace: \"\"\r\n    }\r\n    const validationSchema = Yup.object({\r\n        typeOfWorkplace: Yup.string().required(Zorunlu_Alan).min(5)\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => (\r\n                    console.log(values)\r\n                )}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            Çalışma yeri ekleme\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <GridRow>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"typeOfWorkplace\" placeholder=\"Çalışma yeri giriniz\"></HRMSTextInput>\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n\r\n                                        <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <Divider ></Divider>\r\n                        </Segment>\r\n                    </Form >\r\n                )}\r\n            </Formik>\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\forms\\WorkingTimeForm.jsx",["189"],"import { Formik } from 'formik'\r\nimport React from 'react'\r\nimport { Button, Form, Grid, GridColumn, Header, Divider, Segment, FormButton, GridRow } from 'semantic-ui-react'\r\nimport * as Yup from 'yup';\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput';\r\nimport { Zorunlu_Alan } from './JobAdvertisementForm';\r\nexport default function WorkingTimeForm() {\r\n    const initialValues = {\r\n        workingTime: \"\"\r\n    }\r\n    const validationSchema = Yup.object({\r\n        workingTime: Yup.string().required(Zorunlu_Alan).min(5)\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => (\r\n                    console.log(values)\r\n                )}\r\n            >\r\n                {({ handleSubmit }) => (\r\n\r\n\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            Çalışma zamanı ekleme\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <GridRow>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"workingTime\" placeholder=\"Çalışma zamanı giriniz\"></HRMSTextInput>\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n                                        <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <Divider ></Divider>\r\n                        </Segment>\r\n                    </Form >\r\n                )}\r\n            </Formik>\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\forms\\KnownTechnologyForm.jsx",["190"],"import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport * as Yup from \"yup\"\r\nimport { Formik } from 'formik'\r\nimport { Button, Form, Grid, GridColumn, Header, Divider, Segment, GridRow } from 'semantic-ui-react'\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput'\r\nimport KnownTechnologyService from '../services/knownTechnologyService'\r\nimport { Gecerli_Bir_Sayi_Degil, Zorunlu_Alan } from './JobAdvertisementForm'\r\n\r\n\r\nexport default function KnownTechnologyForm() {\r\n\r\n    const [knownTechnology, setknownTechnology] = useState([])\r\n    useEffect(() => {\r\n        let knownTechnologyService = new KnownTechnologyService()\r\n        knownTechnologyService.getGetAll().then(result => setknownTechnology(result.data.data))\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        technology:\"\",\r\n        resumeId:\"\"\r\n        \r\n    }\r\n    const validationSchema = Yup.object({\r\n        technology:Yup.string().required(Zorunlu_Alan),\r\n        resumeId:Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan)\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => (\r\n                    console.log(values)\r\n                )}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            Teknoloji ekleme\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <GridRow>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"technology\" placeholder=\"Teknoloji adı giriniz\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"resumeId\" placeholder=\"cv no  //geçici\"></HRMSTextInput>\r\n\r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n\r\n                                        <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <Divider ></Divider>\r\n                        </Segment>\r\n                    </Form >\r\n                )}\r\n            </Formik>\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\services\\knownTechnologyService.js",[],"F:\\reacthrms\\hrms-project\\src\\forms\\KnownLanguageForm.jsx",["191"],"import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport * as Yup from \"yup\"\r\nimport { Formik } from 'formik'\r\nimport { Button, Form, Grid, GridColumn, Header, Divider, Segment, GridRow } from 'semantic-ui-react'\r\nimport HRMSTextInput from '../Utilities/CustomFormControls/HRMSTextInput'\r\nimport KnownLanguageService from '../services/knownLanguageService'\r\nimport { Gecerli_Bir_Sayi_Degil, Zorunlu_Alan } from './JobAdvertisementForm'\r\nexport const Bir_Ile_Bes_Arasinda_Olmali = \"1 ile 5 arasında olmalı\"\r\n\r\n\r\nexport default function KnownLanguageForm() {\r\n\r\n    const [knownLanguage, seKnownLanguage] = useState([])\r\n    useEffect(() => {\r\n        let knownLanguageService = new KnownLanguageService()\r\n        knownLanguageService.getGetAll().then(result => seKnownLanguage(result.data.data))\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        language:\"\",\r\n        languageLevel:\"\",\r\n        resumeId:\"\"\r\n        \r\n    }\r\n    const validationSchema = Yup.object({\r\n        language:Yup.string().required(Zorunlu_Alan),\r\n        languageLevel:Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan).min(1,Bir_Ile_Bes_Arasinda_Olmali).max(5,Bir_Ile_Bes_Arasinda_Olmali),\r\n        resumeId:Yup.number(Gecerli_Bir_Sayi_Degil).required(Zorunlu_Alan)\r\n    })\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values) => (\r\n                    console.log(values)\r\n                )}\r\n            >\r\n                {({ handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit} className=\"ui form\">\r\n                        <Header as='h3' disabled dividing>\r\n                            Dil ekleme\r\n                        </Header>\r\n                        <Segment padded >\r\n                            <Grid>\r\n                                <GridRow>\r\n                                    <GridColumn width={8}>\r\n                                        <HRMSTextInput name=\"language\" placeholder=\"Dil adı\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"languageLevel\" placeholder=\"Dil seviyesi (1-5)\"></HRMSTextInput>\r\n                                        <HRMSTextInput name=\"resumeId\" placeholder=\"cv no geçici\"></HRMSTextInput>\r\n\r\n                                   \r\n                                    </GridColumn>\r\n                                    <GridColumn width={8}>\r\n\r\n                                        <Button color=\"olive\" circular type=\"submit\">Ekle</Button>\r\n                                    </GridColumn>\r\n                                </GridRow>\r\n                            </Grid>\r\n                            <Divider ></Divider>\r\n                        </Segment>\r\n                    </Form >\r\n                )}\r\n            </Formik>\r\n            <Header as='h6' icon disabled dividing>\r\n                HRMS\r\n            </Header>\r\n        </div>\r\n    )\r\n}\r\n","F:\\reacthrms\\hrms-project\\src\\services\\knownLanguageService.js",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"200","severity":2,"message":"201","line":13,"column":18,"nodeType":"202","messageId":"203","endLine":13,"endColumn":24},{"ruleId":"200","severity":2,"message":"201","line":14,"column":18,"nodeType":"202","messageId":"203","endLine":14,"endColumn":24},{"ruleId":"192","replacedBy":"204"},{"ruleId":"194","replacedBy":"205"},{"ruleId":"196","severity":1,"message":"206","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":28},{"ruleId":"196","severity":1,"message":"207","line":8,"column":12,"nodeType":"198","messageId":"199","endLine":8,"endColumn":17},{"ruleId":"196","severity":1,"message":"208","line":8,"column":19,"nodeType":"198","messageId":"199","endLine":8,"endColumn":27},{"ruleId":"196","severity":1,"message":"209","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":31},{"ruleId":"196","severity":1,"message":"210","line":12,"column":10,"nodeType":"198","messageId":"199","endLine":12,"endColumn":15},{"ruleId":"196","severity":1,"message":"211","line":25,"column":12,"nodeType":"198","messageId":"199","endLine":25,"endColumn":28},{"ruleId":"196","severity":1,"message":"212","line":25,"column":30,"nodeType":"198","messageId":"199","endLine":25,"endColumn":49},{"ruleId":"196","severity":1,"message":"213","line":26,"column":12,"nodeType":"198","messageId":"199","endLine":26,"endColumn":20},{"ruleId":"196","severity":1,"message":"214","line":3,"column":68,"nodeType":"198","messageId":"199","endLine":3,"endColumn":78},{"ruleId":"196","severity":1,"message":"215","line":9,"column":9,"nodeType":"198","messageId":"199","endLine":9,"endColumn":22},{"ruleId":"196","severity":1,"message":"216","line":11,"column":9,"nodeType":"198","messageId":"199","endLine":11,"endColumn":24},{"ruleId":"196","severity":1,"message":"217","line":11,"column":9,"nodeType":"198","messageId":"199","endLine":11,"endColumn":25},{"ruleId":"196","severity":1,"message":"218","line":12,"column":9,"nodeType":"198","messageId":"199","endLine":12,"endColumn":36},{"ruleId":"196","severity":1,"message":"219","line":13,"column":12,"nodeType":"198","messageId":"199","endLine":13,"endColumn":32},{"ruleId":"196","severity":1,"message":"220","line":13,"column":34,"nodeType":"198","messageId":"199","endLine":13,"endColumn":57},{"ruleId":"196","severity":1,"message":"221","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"221","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":16},{"ruleId":"196","severity":1,"message":"222","line":13,"column":12,"nodeType":"198","messageId":"199","endLine":13,"endColumn":21},{"ruleId":"196","severity":1,"message":"214","line":3,"column":68,"nodeType":"198","messageId":"199","endLine":3,"endColumn":78},{"ruleId":"196","severity":1,"message":"223","line":13,"column":12,"nodeType":"198","messageId":"199","endLine":13,"endColumn":27},{"ruleId":"196","severity":1,"message":"224","line":14,"column":12,"nodeType":"198","messageId":"199","endLine":14,"endColumn":25},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'SignUpForm' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'Button' is not defined.","JSXIdentifier","undefined",["225"],["226"],"'JobAdvertisementForm' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'JobAdvertisementService' is defined but never used.","'toast' is defined but never used.","'jobAdvertisement' is assigned a value but never used.","'setjobAdvertisement' is assigned a value but never used.","'jobTitle' is assigned a value but never used.","'FormButton' is defined but never used.","'resumeService' is assigned a value but never used.","'employerService' is assigned a value but never used.","'jobSeekerService' is assigned a value but never used.","'educationInformationService' is assigned a value but never used.","'educationInformation' is assigned a value but never used.","'setEducationInformation' is assigned a value but never used.","'Button' is defined but never used.","'workplace' is assigned a value but never used.","'knownTechnology' is assigned a value but never used.","'knownLanguage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]